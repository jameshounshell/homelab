#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: nginx
#  labels:
#    app: nginx
#spec:
#  replicas: 3
#  selector:
#    matchLabels:
#      app: nginx
#  template:
#    metadata:
#      labels:
#        app: nginx
#    spec:
#      containers:
#      - name: nginx
#        image: nginx:1.14.2
#        ports:
#        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-svc
  template:
    metadata:
      labels:
        app: http-svc
    spec:
      containers:
        - name: http-svc
          image: k8s.gcr.io/e2e-test-images/echoserver:2.3
          ports:
            - containerPort: 8080
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

---
apiVersion: v1
kind: Service
metadata:
  name: http-svc
  labels:
    app: http-svc
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: http-svc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #    ingress.kubernetes.io/ssl-redirect: "false"
    #    acme.cert-manager.io/http01-edit-in-place: "false"
    # kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-staging"
spec:
  ingressClassName: nginx
  rules:
    - host: jameshounshell.com
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: http-svc
                port:
                  number: 80
            path: /
  tls:
    - hosts:
        - jameshounshell.com
      secretName: jameshounshell-com
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # The ACME server URL
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: jameshounshell@gmail.com.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            class: nginx
      - dns01:
          cloudflare:
            email: my-cloudflare-acc@example.com
            apiKeySecretRef:
              name: cloudflare-api-key-secret
              key: api-key
        selector:
          dnsNames:
            - 'jameshounshell.com'
            - '*.jameshounshell.com'
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-api-key-secret
type: Opaque
stringData:
  api-key: 3fd9eb61ed47b5358965a67712f18794db207
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: example-tls
#  namespace: foo
#data:
#  tls.crt: <base64 encoded cert>
#  tls.key: <base64 encoded key>
#type: kubernetes.io/tls
